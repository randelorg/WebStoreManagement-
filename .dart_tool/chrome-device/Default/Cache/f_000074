<<<<<<< HEAD
define(['dart_sdk', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/widgets/icon_theme.dart', 'packages/flutter/src/widgets/icon_theme_data.dart', 'packages/flutter/src/gestures/tap.dart'], (function load__packages__flutter__src__cupertino__button_dart(dart_sdk, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__widgets__icon_theme$46dart, packages__flutter__src__widgets__icon_theme_data$46dart, packages__flutter__src__gestures__tap$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const colors = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const icon_theme = packages__flutter__src__widgets__icon_theme$46dart.src__widgets__icon_theme;
  const icon_theme_data = packages__flutter__src__widgets__icon_theme_data$46dart.src__widgets__icon_theme_data;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  var button = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    TweenOfdouble: () => (T.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    voidToNull: () => (T.voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))()
=======
define(['dart_sdk', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/painting/strut_style.dart'], (function load__packages__flutter__src__rendering__debug_overflow_indicator_dart(dart_sdk, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__painting__strut_style$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const text_painter = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_painter;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  var debug_overflow_indicator = Object.create(dart.library);
  var $length = dartx.length;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $toStringAsPrecision = dartx.toStringAsPrecision;
  var $add = dartx.add;
  var $isEmpty = dartx.isEmpty;
  var $runtimeType = dartx.runtimeType;
  var $isNotEmpty = dartx.isNotEmpty;
  var $first = dartx.first;
  var $last = dartx.last;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $join = dartx.join;
  var $times = dartx['*'];
  var $truncate = dartx.truncate;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    ListOfTextPainter: () => (T.ListOfTextPainter = dart.constFn(core.List$(text_painter.TextPainter)))(),
    JSArrayOf_OverflowRegionData: () => (T.JSArrayOf_OverflowRegionData = dart.constFn(_interceptors.JSArray$(debug_overflow_indicator._OverflowRegionData)))(),
    JSArrayOfDiagnosticsNode: () => (T.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    SyncIterableOfDiagnosticsNode: () => (T.SyncIterableOfDiagnosticsNode = dart.constFn(_js_helper.SyncIterable$(diagnostics.DiagnosticsNode)))(),
    IterableOfDiagnosticsNode: () => (T.IterableOfDiagnosticsNode = dart.constFn(core.Iterable$(diagnostics.DiagnosticsNode)))(),
    VoidToIterableOfDiagnosticsNode: () => (T.VoidToIterableOfDiagnosticsNode = dart.constFn(dart.fnType(T.IterableOfDiagnosticsNode(), [])))(),
    TextSpanN: () => (T.TextSpanN = dart.constFn(dart.nullable(text_span.TextSpan)))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    JSArrayOfColor: () => (T.JSArrayOfColor = dart.constFn(_interceptors.JSArray$(ui.Color)))(),
    JSArrayOfdouble: () => (T.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))()
>>>>>>> feature-b
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
<<<<<<< HEAD
    get C1() {
      return C[1] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1115059840
=======
    get C0() {
      return C[0] = dart.const({
        __proto__: debug_overflow_indicator._OverflowSide.prototype,
        [_name$]: "_OverflowSide.left",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: debug_overflow_indicator._OverflowSide.prototype,
        [_name$]: "_OverflowSide.top",
        index: 1
>>>>>>> feature-b
      });
    },
    get C2() {
      return C[2] = dart.const({
<<<<<<< HEAD
        __proto__: ui.Color.prototype,
        [Color_value]: 678720640
=======
        __proto__: debug_overflow_indicator._OverflowSide.prototype,
        [_name$]: "_OverflowSide.bottom",
        index: 2
>>>>>>> feature-b
      });
    },
    get C3() {
      return C[3] = dart.const({
<<<<<<< HEAD
        __proto__: ui.Color.prototype,
        [Color_value]: 762738304
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 343176320
      });
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: colors.CupertinoDynamicColor.prototype,
        [Color_value]: 0,
        [CupertinoDynamicColor_darkHighContrastElevatedColor]: C[1] || CT.C1,
        [CupertinoDynamicColor_highContrastElevatedColor]: C[2] || CT.C2,
        [CupertinoDynamicColor_darkElevatedColor]: C[3] || CT.C3,
        [CupertinoDynamicColor_elevatedColor]: C[4] || CT.C4,
        [CupertinoDynamicColor_darkHighContrastColor]: C[1] || CT.C1,
        [CupertinoDynamicColor_highContrastColor]: C[2] || CT.C2,
        [CupertinoDynamicColor_darkColor]: C[3] || CT.C3,
        [CupertinoDynamicColor_color]: C[4] || CT.C4,
        [CupertinoDynamicColor__debugResolveContext]: null,
        [CupertinoDynamicColor__debugLabel]: "quaternarySystemFill",
        [CupertinoDynamicColor__effectiveColor]: C[4] || CT.C4
=======
        __proto__: debug_overflow_indicator._OverflowSide.prototype,
        [_name$]: "_OverflowSide.right",
        index: 3
      });
    },
    get C4() {
      return C[4] = dart.constList([C[0] || CT.C0, C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3], debug_overflow_indicator._OverflowSide);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
>>>>>>> feature-b
      });
    },
    get C6() {
      return C[6] = dart.const({
<<<<<<< HEAD
        __proto__: ui.Radius.prototype,
        [Radius_y]: 8,
        [Radius_x]: 8
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[6] || CT.C6,
        [BorderRadius_bottomLeft]: C[6] || CT.C6,
        [BorderRadius_topRight]: C[6] || CT.C6,
        [BorderRadius_topLeft]: C[6] || CT.C6
=======
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 8.5
>>>>>>> feature-b
      });
    },
    get C7() {
      return C[7] = dart.const({
<<<<<<< HEAD
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
=======
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 1,
        [OffsetBase__dx]: 0
>>>>>>> feature-b
      });
    },
    get C8() {
      return C[8] = dart.const({
<<<<<<< HEAD
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
=======
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 8.5,
        [OffsetBase__dx]: 0
>>>>>>> feature-b
      });
    },
    get C9() {
      return C[9] = dart.const({
<<<<<<< HEAD
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 0,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 0
=======
        __proto__: ui.Color.prototype,
        [Color_value]: 3204448256.0
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3221225216.0
>>>>>>> feature-b
      });
    },
    get C12() {
      return C[12] = dart.const({
<<<<<<< HEAD
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 23,
        [_Location_line]: 276,
        [_Location_file]: null
=======
        __proto__: ui.FontWeight.prototype,
        [FontWeight_index]: 7
>>>>>>> feature-b
      });
    },
    get C13() {
      return C[13] = dart.const({
<<<<<<< HEAD
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 277,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.constList([C[12] || CT.C12, C[13] || CT.C13], widget_inspector._Location);
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[11] || CT.C11,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 275,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart"
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 21,
        [_Location_line]: 274,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 21,
        [_Location_line]: 275,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.constList([C[16] || CT.C16, C[17] || CT.C17], widget_inspector._Location);
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[15] || CT.C15,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 273,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 19,
        [_Location_line]: 270,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 19,
        [_Location_line]: 271,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 19,
        [_Location_line]: 272,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 273,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.constList([C[20] || CT.C20, C[21] || CT.C21, C[22] || CT.C22, C[23] || CT.C23], widget_inspector._Location);
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[19] || CT.C19,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 269,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart"
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 17,
        [_Location_line]: 266,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.constList([C[26] || CT.C26, C[27] || CT.C27], widget_inspector._Location);
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[25] || CT.C25,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 265,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart"
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 15,
        [_Location_line]: 259,
        [_Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 265,
        [_Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.constList([C[30] || CT.C30, C[31] || CT.C31], widget_inspector._Location);
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[29] || CT.C29,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 258,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 13,
        [_Location_line]: 257,
        [_Location_file]: null
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 258,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.constList([C[34] || CT.C34, C[35] || CT.C35], widget_inspector._Location);
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[33] || CT.C33,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 256,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart"
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 11,
        [_Location_line]: 250,
        [_Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 256,
        [_Location_file]: null
      });
    },
    get C37() {
      return C[37] = dart.constList([C[38] || CT.C38, C[39] || CT.C39], widget_inspector._Location);
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[37] || CT.C37,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 249,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart"
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "button",
        [_Location_column]: 9,
        [_Location_line]: 248,
        [_Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 249,
        [_Location_file]: null
      });
    },
    get C41() {
      return C[41] = dart.constList([C[42] || CT.C42, C[43] || CT.C43], widget_inspector._Location);
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[41] || CT.C41,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 247,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart"
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 242,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapDown",
        [_Location_column]: 7,
        [_Location_line]: 243,
        [_Location_file]: null
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapUp",
        [_Location_column]: 7,
        [_Location_line]: 244,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapCancel",
        [_Location_column]: 7,
        [_Location_line]: 245,
        [_Location_file]: null
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 7,
        [_Location_line]: 246,
        [_Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 247,
        [_Location_file]: null
      });
    },
    get C45() {
      return C[45] = dart.constList([C[46] || CT.C46, C[47] || CT.C47, C[48] || CT.C48, C[49] || CT.C49, C[50] || CT.C50, C[51] || CT.C51], widget_inspector._Location);
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[45] || CT.C45,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 241,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart"
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 10000
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 100000
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 14,
        [EdgeInsets_right]: 64,
        [EdgeInsets_top]: 14,
        [EdgeInsets_left]: 64
      });
    }
  }, false);
  var C = Array(56).fill(void 0);
  var I = [
    "file:///C:/flutter/packages/flutter/lib/src/cupertino/button.dart",
    "package:flutter/src/cupertino/button.dart"
  ];
  var child$ = dart.privateName(button, "CupertinoButton.child");
  var padding$ = dart.privateName(button, "CupertinoButton.padding");
  var color$ = dart.privateName(button, "CupertinoButton.color");
  var disabledColor$ = dart.privateName(button, "CupertinoButton.disabledColor");
  var onPressed$ = dart.privateName(button, "CupertinoButton.onPressed");
  var minSize$ = dart.privateName(button, "CupertinoButton.minSize");
  var pressedOpacity$ = dart.privateName(button, "CupertinoButton.pressedOpacity");
  var borderRadius$ = dart.privateName(button, "CupertinoButton.borderRadius");
  var alignment$ = dart.privateName(button, "CupertinoButton.alignment");
  var _filled = dart.privateName(button, "CupertinoButton._filled");
  var Color_value = dart.privateName(ui, "Color.value");
  var CupertinoDynamicColor_darkHighContrastElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.darkHighContrastElevatedColor");
  var CupertinoDynamicColor_highContrastElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.highContrastElevatedColor");
  var CupertinoDynamicColor_darkElevatedColor = dart.privateName(colors, "CupertinoDynamicColor.darkElevatedColor");
  var CupertinoDynamicColor_elevatedColor = dart.privateName(colors, "CupertinoDynamicColor.elevatedColor");
  var CupertinoDynamicColor_darkHighContrastColor = dart.privateName(colors, "CupertinoDynamicColor.darkHighContrastColor");
  var CupertinoDynamicColor_highContrastColor = dart.privateName(colors, "CupertinoDynamicColor.highContrastColor");
  var CupertinoDynamicColor_darkColor = dart.privateName(colors, "CupertinoDynamicColor.darkColor");
  var CupertinoDynamicColor_color = dart.privateName(colors, "CupertinoDynamicColor.color");
  var CupertinoDynamicColor__debugResolveContext = dart.privateName(colors, "CupertinoDynamicColor._debugResolveContext");
  var CupertinoDynamicColor__debugLabel = dart.privateName(colors, "CupertinoDynamicColor._debugLabel");
  var CupertinoDynamicColor__effectiveColor = dart.privateName(colors, "CupertinoDynamicColor._effectiveColor");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var _filled$ = dart.privateName(button, "_filled");
  button.CupertinoButton = class CupertinoButton extends framework.StatefulWidget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get disabledColor() {
      return this[disabledColor$];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get onPressed() {
      return this[onPressed$];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get minSize() {
      return this[minSize$];
    }
    set minSize(value) {
      super.minSize = value;
    }
    get pressedOpacity() {
      return this[pressedOpacity$];
    }
    set pressedOpacity(value) {
      super.pressedOpacity = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get [_filled$]() {
      return this[_filled];
    }
    set [_filled$](value) {
      super[_filled$] = value;
    }
    get enabled() {
      return this.onPressed != null;
    }
    createState() {
      return new button._CupertinoButtonState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("enabled", {value: this.enabled, ifFalse: "disabled"}));
    }
  };
  (button.CupertinoButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : C[0] || CT.C0;
    let minSize = opts && 'minSize' in opts ? opts.minSize : 44;
    let pressedOpacity = opts && 'pressedOpacity' in opts ? opts.pressedOpacity : 0.4;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C[5] || CT.C5;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[7] || CT.C7;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[padding$] = padding;
    this[color$] = color;
    this[disabledColor$] = disabledColor;
    this[minSize$] = minSize;
    this[pressedOpacity$] = pressedOpacity;
    this[borderRadius$] = borderRadius;
    this[alignment$] = alignment;
    this[onPressed$] = onPressed;
    if (!(pressedOpacity == null || dart.notNull(pressedOpacity) >= 0.0 && dart.notNull(pressedOpacity) <= 1.0)) dart.assertFailed(null, I[0], 45, 15, "pressedOpacity == null || (pressedOpacity >= 0.0 && pressedOpacity <= 1.0)");
    if (!(disabledColor !== null)) dart.assertFailed(null, I[0], 46, 15, "disabledColor != null");
    if (!(alignment !== null)) dart.assertFailed(null, I[0], 47, 15, "alignment != null");
    this[_filled] = false;
    button.CupertinoButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button.CupertinoButton.prototype;
  (button.CupertinoButton.filled = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : C[0] || CT.C0;
    let minSize = opts && 'minSize' in opts ? opts.minSize : 44;
    let pressedOpacity = opts && 'pressedOpacity' in opts ? opts.pressedOpacity : 0.4;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C[5] || CT.C5;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[7] || CT.C7;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[padding$] = padding;
    this[disabledColor$] = disabledColor;
    this[minSize$] = minSize;
    this[pressedOpacity$] = pressedOpacity;
    this[borderRadius$] = borderRadius;
    this[alignment$] = alignment;
    this[onPressed$] = onPressed;
    if (!(pressedOpacity == null || dart.notNull(pressedOpacity) >= 0.0 && dart.notNull(pressedOpacity) <= 1.0)) dart.assertFailed(null, I[0], 67, 15, "pressedOpacity == null || (pressedOpacity >= 0.0 && pressedOpacity <= 1.0)");
    if (!(disabledColor !== null)) dart.assertFailed(null, I[0], 68, 15, "disabledColor != null");
    if (!(alignment !== null)) dart.assertFailed(null, I[0], 69, 15, "alignment != null");
    this[color$] = null;
    this[_filled] = true;
    button.CupertinoButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button.CupertinoButton.prototype;
  dart.addTypeTests(button.CupertinoButton);
  dart.addTypeCaches(button.CupertinoButton);
  dart.setMethodSignature(button.CupertinoButton, () => ({
    __proto__: dart.getMethods(button.CupertinoButton.__proto__),
    createState: dart.fnType(button._CupertinoButtonState, [])
  }));
  dart.setGetterSignature(button.CupertinoButton, () => ({
    __proto__: dart.getGetters(button.CupertinoButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(button.CupertinoButton, I[1]);
  dart.setFieldSignature(button.CupertinoButton, () => ({
    __proto__: dart.getFields(button.CupertinoButton.__proto__),
    child: dart.finalFieldType(framework.Widget),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(ui.Color),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    minSize: dart.finalFieldType(dart.nullable(core.double)),
    pressedOpacity: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    alignment: dart.finalFieldType(alignment.AlignmentGeometry),
    [_filled$]: dart.finalFieldType(core.bool)
  }));
  var _opacityTween = dart.privateName(button, "_opacityTween");
  var ___CupertinoButtonState__animationController = dart.privateName(button, "_#_CupertinoButtonState#_animationController");
  var ___CupertinoButtonState__opacityAnimation = dart.privateName(button, "_#_CupertinoButtonState#_opacityAnimation");
  var _buttonHeldDown = dart.privateName(button, "_buttonHeldDown");
  var _animationController = dart.privateName(button, "_animationController");
  var _opacityAnimation = dart.privateName(button, "_opacityAnimation");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _setTween = dart.privateName(button, "_setTween");
  var _animate = dart.privateName(button, "_animate");
  var _handleTapDown = dart.privateName(button, "_handleTapDown");
  var _handleTapUp = dart.privateName(button, "_handleTapUp");
  var _handleTapCancel = dart.privateName(button, "_handleTapCancel");
  var BoxConstraints_maxHeight = dart.privateName(box, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box, "BoxConstraints.minWidth");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(button.CupertinoButton) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(button.CupertinoButton)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(button.CupertinoButton));
  button._CupertinoButtonState = class _CupertinoButtonState extends State_SingleTickerProviderStateMixin$36 {
    get [_animationController]() {
      let t0;
      t0 = this[___CupertinoButtonState__animationController];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_animationController")) : t0;
    }
    set [_animationController](t0) {
      this[___CupertinoButtonState__animationController] = t0;
    }
    get [_opacityAnimation]() {
      let t1;
      t1 = this[___CupertinoButtonState__opacityAnimation];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_opacityAnimation")) : t1;
    }
    set [_opacityAnimation](t1) {
      this[___CupertinoButtonState__opacityAnimation] = t1;
    }
    initState() {
      super.initState();
      this[_animationController] = new animation_controller.AnimationController.new({duration: C[8] || CT.C8, value: 0.0, vsync: this});
      this[_opacityAnimation] = this[_animationController].drive(core.double, new tween.CurveTween.new({curve: curves.Curves.decelerate})).drive(core.double, this[_opacityTween]);
      this[_setTween]();
    }
    didUpdateWidget(old) {
      button.CupertinoButton.as(old);
      super.didUpdateWidget(old);
      this[_setTween]();
    }
    [_setTween]() {
      let t2;
      this[_opacityTween].end = (t2 = this.widget.pressedOpacity, t2 == null ? 1.0 : t2);
    }
    dispose() {
      this[_animationController].dispose();
      super.dispose();
    }
    [_handleTapDown](event) {
      if (!this[_buttonHeldDown]) {
        this[_buttonHeldDown] = true;
        this[_animate]();
      }
    }
    [_handleTapUp](event) {
      if (this[_buttonHeldDown]) {
        this[_buttonHeldDown] = false;
        this[_animate]();
      }
    }
    [_handleTapCancel]() {
      if (this[_buttonHeldDown]) {
        this[_buttonHeldDown] = false;
        this[_animate]();
      }
    }
    [_animate]() {
      if (this[_animationController].isAnimating) return;
      let wasHeldDown = this[_buttonHeldDown];
      let ticker = this[_buttonHeldDown] ? this[_animationController].animateTo(1.0, {duration: button._CupertinoButtonState.kFadeOutDuration}) : this[_animationController].animateTo(0.0, {duration: button._CupertinoButtonState.kFadeInDuration});
      ticker.then(dart.void, dart.fn(value => {
        if (this.mounted && wasHeldDown !== this[_buttonHeldDown]) this[_animate]();
      }, T.voidToNull()));
    }
    build(context) {
      let t2;
      let enabled = this.widget.enabled;
      let themeData = theme.CupertinoTheme.of(context);
      let primaryColor = themeData.primaryColor;
      let backgroundColor = this.widget.color == null ? this.widget[_filled$] ? primaryColor : null : colors.CupertinoDynamicColor.maybeResolve(this.widget.color, context);
      let foregroundColor = backgroundColor != null ? themeData.primaryContrastingColor : enabled ? primaryColor : colors.CupertinoDynamicColor.resolve(colors.CupertinoColors.placeholderText, context);
      let textStyle = themeData.textTheme.textStyle.copyWith({color: foregroundColor});
      return new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onTapDown: enabled ? dart.bind(this, _handleTapDown) : null, onTapUp: enabled ? dart.bind(this, _handleTapUp) : null, onTapCancel: enabled ? dart.bind(this, _handleTapCancel) : null, onTap: this.widget.onPressed, child: new basic.Semantics.new({button: true, child: new basic.ConstrainedBox.new({constraints: this.widget.minSize == null ? C[9] || CT.C9 : new box.BoxConstraints.new({minWidth: dart.nullCheck(this.widget.minSize), minHeight: dart.nullCheck(this.widget.minSize)}), child: new transitions.FadeTransition.new({opacity: this[_opacityAnimation], child: new container.DecoratedBox.new({decoration: new box_decoration.BoxDecoration.new({borderRadius: this.widget.borderRadius, color: backgroundColor != null && !enabled ? colors.CupertinoDynamicColor.resolve(this.widget.disabledColor, context) : backgroundColor}), child: new basic.Padding.new({padding: (t2 = this.widget.padding, t2 == null ? backgroundColor != null ? button._kBackgroundButtonPadding : button._kButtonPadding : t2), child: new basic.Align.new({alignment: this.widget.alignment, widthFactor: 1.0, heightFactor: 1.0, child: new text.DefaultTextStyle.new({style: textStyle, child: new icon_theme.IconTheme.new({data: new icon_theme_data.IconThemeData.new({color: foregroundColor}), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[10] || CT.C10}), $creationLocationd_0dea112b090073317d4: C[14] || CT.C14}), $creationLocationd_0dea112b090073317d4: C[18] || CT.C18}), $creationLocationd_0dea112b090073317d4: C[24] || CT.C24}), $creationLocationd_0dea112b090073317d4: C[28] || CT.C28}), $creationLocationd_0dea112b090073317d4: C[32] || CT.C32}), $creationLocationd_0dea112b090073317d4: C[36] || CT.C36}), $creationLocationd_0dea112b090073317d4: C[40] || CT.C40}), $creationLocationd_0dea112b090073317d4: C[44] || CT.C44});
    }
  };
  (button._CupertinoButtonState.new = function() {
    this[_opacityTween] = new (T.TweenOfdouble()).new({begin: 1.0});
    this[___CupertinoButtonState__animationController] = null;
    this[___CupertinoButtonState__opacityAnimation] = null;
    this[_buttonHeldDown] = false;
    button._CupertinoButtonState.__proto__.new.call(this);
    ;
  }).prototype = button._CupertinoButtonState.prototype;
  dart.addTypeTests(button._CupertinoButtonState);
  dart.addTypeCaches(button._CupertinoButtonState);
  dart.setMethodSignature(button._CupertinoButtonState, () => ({
    __proto__: dart.getMethods(button._CupertinoButtonState.__proto__),
    [_setTween]: dart.fnType(dart.void, []),
    [_handleTapDown]: dart.fnType(dart.void, [tap.TapDownDetails]),
    [_handleTapUp]: dart.fnType(dart.void, [tap.TapUpDetails]),
    [_handleTapCancel]: dart.fnType(dart.void, []),
    [_animate]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(button._CupertinoButtonState, () => ({
    __proto__: dart.getGetters(button._CupertinoButtonState.__proto__),
    [_animationController]: animation_controller.AnimationController,
    [_opacityAnimation]: animation.Animation$(core.double)
  }));
  dart.setSetterSignature(button._CupertinoButtonState, () => ({
    __proto__: dart.getSetters(button._CupertinoButtonState.__proto__),
    [_animationController]: animation_controller.AnimationController,
    [_opacityAnimation]: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(button._CupertinoButtonState, I[1]);
  dart.setFieldSignature(button._CupertinoButtonState, () => ({
    __proto__: dart.getFields(button._CupertinoButtonState.__proto__),
    [_opacityTween]: dart.finalFieldType(tween.Tween$(core.double)),
    [___CupertinoButtonState__animationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [___CupertinoButtonState__opacityAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [_buttonHeldDown]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(button._CupertinoButtonState, {
    /*button._CupertinoButtonState.kFadeOutDuration*/get kFadeOutDuration() {
      return C[52] || CT.C52;
    },
    /*button._CupertinoButtonState.kFadeInDuration*/get kFadeInDuration() {
      return C[53] || CT.C53;
    }
  }, false);
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  dart.defineLazy(button, {
    /*button._kButtonPadding*/get _kButtonPadding() {
      return C[54] || CT.C54;
    },
    /*button._kBackgroundButtonPadding*/get _kBackgroundButtonPadding() {
      return C[55] || CT.C55;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/cupertino/button.dart", {
    "package:flutter/src/cupertino/button.dart": button
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["button.dart"],"names":[],"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","file":"../../../../../../../E:/packages/flutter/src/cupertino/button.dart.lib.js"}');
  // Exports:
  return {
    src__cupertino__button: button
  };
}));

//# sourceMappingURL=button.dart.lib.js.map
=======
        __proto__: ui.Color.prototype,
        [Color_value]: 4287627264.0
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[12] || CT.C12,
        [TextStyle_fontSize]: 7.5,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[13] || CT.C13,
        [TextStyle_inherit]: true
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 10,
        [OffsetBase__dx]: 10
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295.0
      });
    }
  }, false);
  var C = Array(16).fill(void 0);
  var I = [
    "package:flutter/src/rendering/debug_overflow_indicator.dart",
    "file:///C:/flutter/packages/flutter/lib/src/rendering/debug_overflow_indicator.dart"
  ];
  var _name$ = dart.privateName(debug_overflow_indicator, "_name");
  debug_overflow_indicator._OverflowSide = class _OverflowSide extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (debug_overflow_indicator._OverflowSide.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = debug_overflow_indicator._OverflowSide.prototype;
  dart.addTypeTests(debug_overflow_indicator._OverflowSide);
  dart.addTypeCaches(debug_overflow_indicator._OverflowSide);
  dart.setLibraryUri(debug_overflow_indicator._OverflowSide, I[0]);
  dart.setFieldSignature(debug_overflow_indicator._OverflowSide, () => ({
    __proto__: dart.getFields(debug_overflow_indicator._OverflowSide.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(debug_overflow_indicator._OverflowSide, ['toString']);
  debug_overflow_indicator._OverflowSide.left = C[0] || CT.C0;
  debug_overflow_indicator._OverflowSide.top = C[1] || CT.C1;
  debug_overflow_indicator._OverflowSide.bottom = C[2] || CT.C2;
  debug_overflow_indicator._OverflowSide.right = C[3] || CT.C3;
  debug_overflow_indicator._OverflowSide.values = C[4] || CT.C4;
  var rect$ = dart.privateName(debug_overflow_indicator, "_OverflowRegionData.rect");
  var label$ = dart.privateName(debug_overflow_indicator, "_OverflowRegionData.label");
  var labelOffset$ = dart.privateName(debug_overflow_indicator, "_OverflowRegionData.labelOffset");
  var rotation$ = dart.privateName(debug_overflow_indicator, "_OverflowRegionData.rotation");
  var side$ = dart.privateName(debug_overflow_indicator, "_OverflowRegionData.side");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  debug_overflow_indicator._OverflowRegionData = class _OverflowRegionData extends core.Object {
    get rect() {
      return this[rect$];
    }
    set rect(value) {
      super.rect = value;
    }
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get labelOffset() {
      return this[labelOffset$];
    }
    set labelOffset(value) {
      super.labelOffset = value;
    }
    get rotation() {
      return this[rotation$];
    }
    set rotation(value) {
      super.rotation = value;
    }
    get side() {
      return this[side$];
    }
    set side(value) {
      super.side = value;
    }
  };
  (debug_overflow_indicator._OverflowRegionData.new = function(opts) {
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let label = opts && 'label' in opts ? opts.label : "";
    let labelOffset = opts && 'labelOffset' in opts ? opts.labelOffset : C[5] || CT.C5;
    let rotation = opts && 'rotation' in opts ? opts.rotation : 0;
    let side = opts && 'side' in opts ? opts.side : null;
    this[rect$] = rect;
    this[label$] = label;
    this[labelOffset$] = labelOffset;
    this[rotation$] = rotation;
    this[side$] = side;
    ;
  }).prototype = debug_overflow_indicator._OverflowRegionData.prototype;
  dart.addTypeTests(debug_overflow_indicator._OverflowRegionData);
  dart.addTypeCaches(debug_overflow_indicator._OverflowRegionData);
  dart.setLibraryUri(debug_overflow_indicator._OverflowRegionData, I[0]);
  dart.setFieldSignature(debug_overflow_indicator._OverflowRegionData, () => ({
    __proto__: dart.getFields(debug_overflow_indicator._OverflowRegionData.__proto__),
    rect: dart.finalFieldType(ui.Rect),
    label: dart.finalFieldType(core.String),
    labelOffset: dart.finalFieldType(ui.Offset),
    rotation: dart.finalFieldType(core.double),
    side: dart.finalFieldType(debug_overflow_indicator._OverflowSide)
  }));
  var _indicatorLabel = dart.privateName(debug_overflow_indicator, "_indicatorLabel");
  var _overflowReportNeeded = dart.privateName(debug_overflow_indicator, "_overflowReportNeeded");
  var _formatPixels = dart.privateName(debug_overflow_indicator, "_formatPixels");
  var _calculateOverflowRegions = dart.privateName(debug_overflow_indicator, "_calculateOverflowRegions");
  var _reportOverflow = dart.privateName(debug_overflow_indicator, "_reportOverflow");
  var Color_value = dart.privateName(ui, "Color.value");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  debug_overflow_indicator.DebugOverflowIndicatorMixin = class DebugOverflowIndicatorMixin extends object.RenderObject {};
  debug_overflow_indicator.DebugOverflowIndicatorMixin[dart.mixinOn] = RenderObject => class DebugOverflowIndicatorMixin extends RenderObject {
    [_formatPixels](value) {
      if (!(value > 0.0)) dart.assertFailed(null, I[1], 122, 12, "value > 0.0");
      let pixels = null;
      if (value > 10.0) {
        pixels = value[$toStringAsFixed](0);
      } else if (value > 1.0) {
        pixels = value[$toStringAsFixed](1);
      } else {
        pixels = value[$toStringAsPrecision](3);
      }
      return pixels;
    }
    [_calculateOverflowRegions](overflow, containerRect) {
      let regions = T.JSArrayOf_OverflowRegionData().of([]);
      if (overflow.left > 0.0) {
        let markerRect = new ui.Rect.fromLTWH(0.0, 0.0, containerRect.width * 0.1, containerRect.height);
        regions[$add](new debug_overflow_indicator._OverflowRegionData.new({rect: markerRect, label: "LEFT OVERFLOWED BY " + this[_formatPixels](overflow.left) + " PIXELS", labelOffset: markerRect.centerLeft['+'](C[6] || CT.C6), rotation: 3.141592653589793 / 2.0, side: debug_overflow_indicator._OverflowSide.left}));
      }
      if (overflow.right > 0.0) {
        let markerRect = new ui.Rect.fromLTWH(containerRect.width * (1.0 - 0.1), 0.0, containerRect.width * 0.1, containerRect.height);
        regions[$add](new debug_overflow_indicator._OverflowRegionData.new({rect: markerRect, label: "RIGHT OVERFLOWED BY " + this[_formatPixels](overflow.right) + " PIXELS", labelOffset: markerRect.centerRight['-'](C[6] || CT.C6), rotation: -3.141592653589793 / 2.0, side: debug_overflow_indicator._OverflowSide.right}));
      }
      if (overflow.top > 0.0) {
        let markerRect = new ui.Rect.fromLTWH(0.0, 0.0, containerRect.width, containerRect.height * 0.1);
        regions[$add](new debug_overflow_indicator._OverflowRegionData.new({rect: markerRect, label: "TOP OVERFLOWED BY " + this[_formatPixels](overflow.top) + " PIXELS", labelOffset: markerRect.topCenter['+'](C[7] || CT.C7), rotation: 0.0, side: debug_overflow_indicator._OverflowSide.top}));
      }
      if (overflow.bottom > 0.0) {
        let markerRect = new ui.Rect.fromLTWH(0.0, containerRect.height * (1.0 - 0.1), containerRect.width, containerRect.height * 0.1);
        regions[$add](new debug_overflow_indicator._OverflowRegionData.new({rect: markerRect, label: "BOTTOM OVERFLOWED BY " + this[_formatPixels](overflow.bottom) + " PIXELS", labelOffset: markerRect.bottomCenter['-'](C[8] || CT.C8), rotation: 0.0, side: debug_overflow_indicator._OverflowSide.bottom}));
      }
      return regions;
    }
    [_reportOverflow](overflow, overflowHints) {
      overflowHints == null ? overflowHints = T.JSArrayOfDiagnosticsNode().of([]) : null;
      if (overflowHints[$isEmpty]) {
        overflowHints[$add](new assertions.ErrorDescription.new("The edge of the " + dart.str(this[$runtimeType]) + " that is " + "overflowing has been marked in the rendering with a yellow and black " + "striped pattern. This is usually caused by the contents being too big " + "for the " + dart.str(this[$runtimeType]) + "."));
        overflowHints[$add](new assertions.ErrorHint.new("This is considered an error condition because it indicates that there " + "is content that cannot be seen. If the content is legitimately bigger " + "than the available space, consider clipping it with a ClipRect widget " + "before putting it in the " + dart.str(this[$runtimeType]) + ", or using a scrollable " + "container, like a ListView."));
      }
      let overflows = (() => {
        let t0 = T.JSArrayOfString().of([]);
        if (overflow.left > 0.0) t0[$add](this[_formatPixels](overflow.left) + " pixels on the left");
        if (overflow.top > 0.0) t0[$add](this[_formatPixels](overflow.top) + " pixels on the top");
        if (overflow.bottom > 0.0) t0[$add](this[_formatPixels](overflow.bottom) + " pixels on the bottom");
        if (overflow.right > 0.0) t0[$add](this[_formatPixels](overflow.right) + " pixels on the right");
        return t0;
      })();
      let overflowText = "";
      if (!overflows[$isNotEmpty]) dart.assertFailed("Somehow " + dart.str(this[$runtimeType]) + " didn't actually overflow like it thought it did.", I[1], 227, 12, "overflows.isNotEmpty");
      switch (overflows[$length]) {
        case 1:
        {
          overflowText = overflows[$first];
          break;
        }
        case 2:
        {
          overflowText = overflows[$first] + " and " + overflows[$last];
          break;
        }
        default:
        {
          overflows[$_set](overflows[$length] - 1, "and " + overflows[$_get](overflows[$length] - 1));
          overflowText = overflows[$join](", ");
        }
      }
      assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: assertions.FlutterError.new("A " + dart.str(this[$runtimeType]) + " overflowed by " + overflowText + "."), library: "rendering library", context: new assertions.ErrorDescription.new("during layout"), informationCollector: dart.fn(() => new (T.SyncIterableOfDiagnosticsNode()).new((function*() {
          if (this.debugCreator != null) yield new object.DiagnosticsDebugCreator.new(dart.nullCheck(this.debugCreator));
          yield* dart.nullCheck(overflowHints);
          yield this.describeForError("The specific " + dart.str(this[$runtimeType]) + " in question is");
          yield diagnostics.DiagnosticsNode.message("◢◤"[$times]((100 / 2)[$truncate]()), {allowWrap: false});
        }).bind(this)), T.VoidToIterableOfDiagnosticsNode())}));
    }
    paintOverflowIndicator(context, offset, containerRect, childRect, opts) {
      let t1;
      let overflowHints = opts && 'overflowHints' in opts ? opts.overflowHints : null;
      let overflow = stack.RelativeRect.fromRect(containerRect, childRect);
      if (overflow.left <= 0.0 && overflow.right <= 0.0 && overflow.top <= 0.0 && overflow.bottom <= 0.0) {
        return;
      }
      let overflowRegions = this[_calculateOverflowRegions](overflow, containerRect);
      for (let region of overflowRegions) {
        context.canvas.drawRect(region.rect.shift(offset), debug_overflow_indicator.DebugOverflowIndicatorMixin._indicatorPaint);
        let textSpan = T.TextSpanN().as(this[_indicatorLabel][$_get](region.side.index).text);
        if ((t1 = textSpan, t1 == null ? null : t1.text) !== region.label) {
          this[_indicatorLabel][$_get](region.side.index).text = new text_span.TextSpan.new({text: region.label, style: debug_overflow_indicator.DebugOverflowIndicatorMixin._indicatorTextStyle});
          this[_indicatorLabel][$_get](region.side.index).layout();
        }
        let labelOffset = region.labelOffset['+'](offset);
        let centerOffset = new ui.Offset.new(-this[_indicatorLabel][$_get](region.side.index).width / 2.0, 0.0);
        let textBackgroundRect = centerOffset['&'](this[_indicatorLabel][$_get](region.side.index).size);
        context.canvas.save();
        context.canvas.translate(labelOffset.dx, labelOffset.dy);
        context.canvas.rotate(region.rotation);
        context.canvas.drawRect(textBackgroundRect, debug_overflow_indicator.DebugOverflowIndicatorMixin._labelBackgroundPaint);
        this[_indicatorLabel][$_get](region.side.index).paint(context.canvas, centerOffset);
        context.canvas.restore();
      }
      if (this[_overflowReportNeeded]) {
        this[_overflowReportNeeded] = false;
        this[_reportOverflow](overflow, overflowHints);
      }
    }
    reassemble() {
      super.reassemble();
      if (!dart.fn(() => {
        this[_overflowReportNeeded] = true;
        return true;
      }, T.VoidTobool())()) dart.assertFailed(null, I[1], 315, 12, "() {\r\n      _overflowReportNeeded = true;\r\n      return true;\r\n    }()");
    }
  };
  (debug_overflow_indicator.DebugOverflowIndicatorMixin[dart.mixinNew] = function() {
    this[_indicatorLabel] = T.ListOfTextPainter().filled(debug_overflow_indicator._OverflowSide.values[$length], new text_painter.TextPainter.new({textDirection: ui.TextDirection.ltr}));
    this[_overflowReportNeeded] = true;
  }).prototype = debug_overflow_indicator.DebugOverflowIndicatorMixin.prototype;
  dart.addTypeTests(debug_overflow_indicator.DebugOverflowIndicatorMixin);
  dart.addTypeCaches(debug_overflow_indicator.DebugOverflowIndicatorMixin);
  debug_overflow_indicator.DebugOverflowIndicatorMixin[dart.implements] = () => [object.RenderObject];
  dart.setMethodSignature(debug_overflow_indicator.DebugOverflowIndicatorMixin, () => ({
    __proto__: dart.getMethods(debug_overflow_indicator.DebugOverflowIndicatorMixin.__proto__),
    [_formatPixels]: dart.fnType(core.String, [core.double]),
    [_calculateOverflowRegions]: dart.fnType(core.List$(debug_overflow_indicator._OverflowRegionData), [stack.RelativeRect, ui.Rect]),
    [_reportOverflow]: dart.fnType(dart.void, [stack.RelativeRect, dart.nullable(core.List$(diagnostics.DiagnosticsNode))]),
    paintOverflowIndicator: dart.fnType(dart.void, [object.PaintingContext, ui.Offset, ui.Rect, ui.Rect], {overflowHints: dart.nullable(core.List$(diagnostics.DiagnosticsNode))}, {})
  }));
  dart.setLibraryUri(debug_overflow_indicator.DebugOverflowIndicatorMixin, I[0]);
  dart.setFieldSignature(debug_overflow_indicator.DebugOverflowIndicatorMixin, () => ({
    __proto__: dart.getFields(debug_overflow_indicator.DebugOverflowIndicatorMixin.__proto__),
    [_indicatorLabel]: dart.finalFieldType(core.List$(text_painter.TextPainter)),
    [_overflowReportNeeded]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(debug_overflow_indicator.DebugOverflowIndicatorMixin, {
    /*debug_overflow_indicator.DebugOverflowIndicatorMixin._black*/get _black() {
      return C[9] || CT.C9;
    },
    /*debug_overflow_indicator.DebugOverflowIndicatorMixin._yellow*/get _yellow() {
      return C[10] || CT.C10;
    },
    /*debug_overflow_indicator.DebugOverflowIndicatorMixin._indicatorFraction*/get _indicatorFraction() {
      return 0.1;
    },
    /*debug_overflow_indicator.DebugOverflowIndicatorMixin._indicatorFontSizePixels*/get _indicatorFontSizePixels() {
      return 7.5;
    },
    /*debug_overflow_indicator.DebugOverflowIndicatorMixin._indicatorLabelPaddingPixels*/get _indicatorLabelPaddingPixels() {
      return 1;
    },
    /*debug_overflow_indicator.DebugOverflowIndicatorMixin._indicatorTextStyle*/get _indicatorTextStyle() {
      return C[11] || CT.C11;
    },
    /*debug_overflow_indicator.DebugOverflowIndicatorMixin._indicatorPaint*/get _indicatorPaint() {
      let t1;
      return t1 = ui.Paint.new(), (() => {
        t1.shader = ui.Gradient.linear(ui.Offset.zero, C[14] || CT.C14, T.JSArrayOfColor().of([debug_overflow_indicator.DebugOverflowIndicatorMixin._black, debug_overflow_indicator.DebugOverflowIndicatorMixin._yellow, debug_overflow_indicator.DebugOverflowIndicatorMixin._yellow, debug_overflow_indicator.DebugOverflowIndicatorMixin._black]), T.JSArrayOfdouble().of([0.25, 0.25, 0.75, 0.75]), ui.TileMode.repeated);
        return t1;
      })();
    },
    /*debug_overflow_indicator.DebugOverflowIndicatorMixin._labelBackgroundPaint*/get _labelBackgroundPaint() {
      let t1;
      return t1 = ui.Paint.new(), (() => {
        t1.color = C[15] || CT.C15;
        return t1;
      })();
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/rendering/debug_overflow_indicator.dart", {
    "package:flutter/src/rendering/debug_overflow_indicator.dart": debug_overflow_indicator
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["debug_overflow_indicator.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkBA;;gEALK;;;;EAKL;;;;;;;;;;;;;;;;;;;;;;;IAaa;;;;;;IACE;;;;;;IACA;;;;;;IACA;;;;;;IACO;;;;;;;;QAXJ;QACT;QACA;QACA;QACS;IAJA;IACT;IACA;IACA;IACS;;EACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA2F0B;AAC1B,YAAO,AAAM,KAAD,GAAG;AACF;AACb,UAAI,AAAM,KAAD,GAAG;AACuB,QAAjC,SAAS,AAAM,KAAD,mBAAiB;YAC1B,KAAI,AAAM,KAAD,GAAG;AACgB,QAAjC,SAAS,AAAM,KAAD,mBAAiB;;AAEM,QAArC,SAAS,AAAM,KAAD,uBAAqB;;AAErC,YAAO,OAAM;IACf;gCAEiE,UAAe;AAC9C,oBAA+B;AAC/D,UAAI,AAAS,AAAK,QAAN,QAAQ;AACP,yBAAkB,qBAC3B,KACA,KACA,AAAc,AAAM,aAAP,cACb,AAAc,aAAD;AASb,QAPF,AAAQ,OAAD,OAAK,4DACJ,UAAU,SACT,AAA2D,wBAArC,oBAAc,AAAS,QAAD,SAAO,wBAC7C,AAAW,AAAW,UAAZ,2CAEL,oBAAE,WACA;;AAGxB,UAAI,AAAS,AAAM,QAAP,SAAS;AACR,yBAAkB,qBAC3B,AAAc,AAAM,aAAP,UAAU,AAAI,YAC3B,KACA,AAAc,AAAM,aAAP,cACb,AAAc,aAAD;AASb,QAPF,AAAQ,OAAD,OAAK,4DACJ,UAAU,SACT,AAA6D,yBAAtC,oBAAc,AAAS,QAAD,UAAQ,wBAC/C,AAAW,AAAY,UAAb,4CAEb,AAAS,qBAAE,WACD;;AAGxB,UAAI,AAAS,AAAI,QAAL,OAAO;AACN,yBAAkB,qBAC3B,KACA,KACA,AAAc,aAAD,QACb,AAAc,AAAO,aAAR;AAQb,QANF,AAAQ,OAAD,OAAK,4DACJ,UAAU,SACT,AAAyD,uBAApC,oBAAc,AAAS,QAAD,QAAM,wBAC3C,AAAW,AAAU,UAAX,0CACb,WACU;;AAGxB,UAAI,AAAS,AAAO,QAAR,UAAU;AACT,yBAAkB,qBAC3B,KACA,AAAc,AAAO,aAAR,WAAW,AAAI,YAC5B,AAAc,aAAD,QACb,AAAc,AAAO,aAAR;AASb,QAPF,AAAQ,OAAD,OAAK,4DACJ,UAAU,SACT,AAA+D,0BAAvC,oBAAc,AAAS,QAAD,WAAS,wBACjD,AAAW,AAAa,UAAd,6CAEb,WACU;;AAGxB,YAAO,QAAO;IAChB;sBAEkC,UAAiC;AAC5B,MAArC,AAAc,aAAD,WAAb,gBAAmC,sCAArB;AACd,UAAI,AAAc,aAAD;AAMb,QALF,AAAc,aAAD,OAAK,oCAAgB,AAChC,8BAAkB,sBAAW,cAC7B,0EACA,2EACA,sBAAU,sBAAW;AAQrB,QANF,AAAc,aAAD,OAAK,6BAAS,AACzB,2EACA,2EACA,2EACA,uCAA2B,sBAAW,6BACtC;;AAIe,sBAAoB;;AACrC,YAAI,AAAS,AAAK,QAAN,QAAQ,KAAyD,SAAjD,oBAAc,AAAS,QAAD,SAAO;AACzD,YAAI,AAAS,AAAI,QAAL,OAAO,KAAuD,SAA/C,oBAAc,AAAS,QAAD,QAAM;AACvD,YAAI,AAAS,AAAO,QAAR,UAAU,KAA6D,SAArD,oBAAc,AAAS,QAAD,WAAS;AAC7D,YAAI,AAAS,AAAM,QAAP,SAAS,KAA2D,SAAnD,oBAAc,AAAS,QAAD,UAAQ;;;AAEtD,yBAAe;AACtB,WAAO,AAAU,SAAD,iCAAa,AAAuE,sBAA7D,sBAAW;AAClD,cAAQ,AAAU,SAAD;;;AAEiB,UAA9B,eAAe,AAAU,SAAD;AACxB;;;;AAEyD,UAAzD,eAAkB,AAAU,AAA6B,SAA9B,WAAO,UAAO,AAAU,SAAD;AAClD;;;;AAE0E,UAA1E,AAAS,SAAA,QAAC,AAAU,AAAO,SAAR,YAAU,GAAK,AAAwC,SAAjC,AAAS,SAAA,QAAC,AAAU,AAAO,SAAR,YAAU;AACnC,UAAnC,eAAe,AAAU,SAAD,QAAM;;;AAoBjC,MAhBY,oCACX,mDACa,4BAAa,AAA6C,gBAAzC,sBAAW,oBAAgB,YAAY,kBAC1D,8BACA,oCAAiB,wCACJ;AACpB,cAAI,2BACF,MAAM,uCAAoC,eAAZ;AAChC,iBAAoB,eAAb,aAAa;AACpB,gBAAM,sBAAiB,AAA0C,2BAA3B,sBAAW;AAIjD,gBAAsB,oCAAQ,AAAK,aAA0B,OAAG,8BAAe;QAChF;IAGP;2BASkB,SACT,QACF,eACA;;UACkB;AAEJ,qBAAwB,4BAAS,aAAa,EAAE,SAAS;AAE5E,UAAI,AAAS,AAAK,QAAN,SAAS,OACjB,AAAS,AAAM,QAAP,UAAU,OAClB,AAAS,AAAI,QAAL,QAAQ,OAChB,AAAS,AAAO,QAAR,WAAW;AACrB;;AAG8B,4BAAkB,gCAA0B,QAAQ,EAAE,aAAa;AACnG,eAA+B,SAAU,gBAAe;AACa,QAAnE,AAAQ,AAAO,OAAR,iBAAiB,AAAO,AAAK,MAAN,YAAY,MAAM,GAAG;AACnC,uBAAmD,iBAAxC,AAAe,AAAoB,6BAAnB,AAAO,AAAK,MAAN;AACjD,kBAAI,QAAQ,eAAR,OAAU,aAAQ,AAAO,MAAD;AAIzB,UAHD,AAAe,AAAoB,6BAAnB,AAAO,AAAK,MAAN,oBAAoB,kCAClC,AAAO,MAAD,eACL;AAEkC,UAA3C,AAAe,AAAoB,6BAAnB,AAAO,AAAK,MAAN;;AAGX,0BAAc,AAAO,AAAY,MAAb,kBAAe,MAAM;AACzC,2BAAe,kBAAO,AAA0C,CAAzC,AAAe,AAAoB,6BAAnB,AAAO,AAAK,MAAN,qBAAqB,KAAK;AACzE,iCAAqB,AAAa,YAAD,MAAG,AAAe,AAAoB,6BAAnB,AAAO,AAAK,MAAN;AAChD,QAArB,AAAQ,AAAO,OAAR;AACiD,QAAxD,AAAQ,AAAO,OAAR,kBAAkB,AAAY,WAAD,KAAK,AAAY,WAAD;AACd,QAAtC,AAAQ,AAAO,OAAR,eAAe,AAAO,MAAD;AACsC,QAAlE,AAAQ,AAAO,OAAR,iBAAiB,kBAAkB,EAAE;AAC0B,QAAtE,AAAe,AAAoB,6BAAnB,AAAO,AAAK,MAAN,mBAAmB,AAAQ,OAAD,SAAS,YAAY;AAC7C,QAAxB,AAAQ,AAAO,OAAR;;AAGT,UAAI;AAC2B,QAA7B,8BAAwB;AACgB,QAAxC,sBAAgB,QAAQ,EAAE,aAAa;;IAE3C;;AAIoB,MAAZ;AAEN,WAAO,AAGN;AAF6B,QAA5B,8BAAwB;AACxB,cAAO;;IAEX;;;IA/MwB,wBAAkB,6BAC1B,AAAO,wDACrB,iDAAyC;IAKtC,8BAAwB;;;;;;;;;;;;;;;;;;;MA5BV,2DAAM;;;MACN,4DAAO;;;MAEN,uEAAkB;;;MAClB,6EAAwB;;;MACxB,iFAA4B;;;MACzB,wEAAmB;;;MAKvB,oEAAe;;kCAAG;AACjC,oBAAqB,mBACd,iCAEA,uBAAC,6DAAQ,8DAAS,8DAAS,+DAC1B,wBAAC,MAAM,MAAM,MAAM,QAClB;;;;MAEM,0EAAqB;;kCAAG;AAAS","file":"../../../../../../packages/flutter/src/rendering/debug_overflow_indicator.dart.lib.js"}');
  // Exports:
  return {
    src__rendering__debug_overflow_indicator: debug_overflow_indicator
  };
}));

//# sourceMappingURL=debug_overflow_indicator.dart.lib.js.map
>>>>>>> feature-b

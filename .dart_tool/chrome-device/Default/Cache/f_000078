<<<<<<< HEAD
define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/rendering/sliver_fill.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/rendering/sliver_padding.dart', 'packages/flutter/src/rendering/sliver.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__widgets__sliver_fill_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__rendering__sliver_fill$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__rendering__sliver_padding$46dart, packages__flutter__src__rendering__sliver$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const sliver = packages__flutter__src__widgets__widget_span$46dart.src__widgets__sliver;
  const sliver_fill = packages__flutter__src__rendering__sliver_fill$46dart.src__rendering__sliver_fill;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const sliver_padding = packages__flutter__src__rendering__sliver_padding$46dart.src__rendering__sliver_padding;
  const sliver$ = packages__flutter__src__rendering__sliver$46dart.src__rendering__sliver;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  var sliver_fill$ = Object.create(dart.library);
  var $clamp = dartx.clamp;
  var $add = dartx.add;
  var $isEmpty = dartx.isEmpty;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    DiagnosticsPropertyOfWidget: () => (T.DiagnosticsPropertyOfWidget = dart.constFn(diagnostics.DiagnosticsProperty$(framework.Widget)))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    IterablePropertyOfString: () => (T.IterablePropertyOfString = dart.constFn(diagnostics.IterableProperty$(core.String)))()
=======
define(['dart_sdk', 'packages/flutter/src/foundation/object.dart'], (function load__packages__flutter__src__foundation__stack_frame_dart(dart_sdk, packages__flutter__src__foundation__object$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  var stack_frame = Object.create(dart.library);
  var $trim = dartx.trim;
  var $split = dartx.split;
  var $isNotEmpty = dartx.isNotEmpty;
  var $where = dartx.where;
  var $map = dartx.map;
  var $whereType = dartx.whereType;
  var $toList = dartx.toList;
  var $startsWith = dartx.startsWith;
  var $_get = dartx._get;
  var $replaceFirst = dartx.replaceFirst;
  var $length = dartx.length;
  var $first = dartx.first;
  var $skip = dartx.skip;
  var $join = dartx.join;
  var $single = dartx.single;
  var $replaceAll = dartx.replaceAll;
  var $contains = dartx.contains;
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    StringTobool: () => (T.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    StackFrameN: () => (T.StackFrameN = dart.constFn(dart.nullable(stack_frame.StackFrame)))(),
    StringToStackFrameN: () => (T.StringToStackFrameN = dart.constFn(dart.fnType(T.StackFrameN(), [core.String])))()
>>>>>>> feature-b
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
<<<<<<< HEAD
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportFraction",
        [_Location_column]: 9,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 9,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3], widget_inspector._Location);
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 65,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/widgets/sliver_fill.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportFraction",
        [_Location_column]: 7,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 7,
        [_Location_line]: 65,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6, C[7] || CT.C7], widget_inspector._Location);
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[5] || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 63,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/widgets/sliver_fill.dart"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name]: "Axis.horizontal",
        index: 0
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name]: "Axis.vertical",
        index: 1
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 49,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.constList([C[12] || CT.C12], widget_inspector._Location);
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[11] || CT.C11,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 435,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/widgets/sliver_fill.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 52,
        [_Location_line]: 437,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.constList([C[15] || CT.C15], widget_inspector._Location);
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[14] || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 437,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/widgets/sliver_fill.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 46,
        [_Location_line]: 438,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.constList([C[18] || CT.C18], widget_inspector._Location);
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[17] || CT.C17,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 438,
        [_Location_file]: "file:///C:/flutter/packages/flutter/lib/src/widgets/sliver_fill.dart"
      });
    }
  }, false);
  var C = Array(19).fill(void 0);
  var I = [
    "file:///C:/flutter/packages/flutter/lib/src/widgets/sliver_fill.dart",
    "package:flutter/src/widgets/sliver_fill.dart"
  ];
  var viewportFraction$ = dart.privateName(sliver_fill$, "SliverFillViewport.viewportFraction");
  var padEnds$ = dart.privateName(sliver_fill$, "SliverFillViewport.padEnds");
  var delegate$ = dart.privateName(sliver_fill$, "SliverFillViewport.delegate");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  sliver_fill$.SliverFillViewport = class SliverFillViewport extends framework.StatelessWidget {
    get viewportFraction() {
      return this[viewportFraction$];
    }
    set viewportFraction(value) {
      super.viewportFraction = value;
    }
    get padEnds() {
      return this[padEnds$];
    }
    set padEnds(value) {
      super.padEnds = value;
    }
    get delegate() {
      return this[delegate$];
    }
    set delegate(value) {
      super.delegate = value;
    }
    build(context) {
      return new sliver_fill$._SliverFractionalPadding.new({viewportFraction: this.padEnds ? (1 - this.viewportFraction)[$clamp](0, 1) / 2 : 0.0, sliver: new sliver_fill$._SliverFillViewportRenderObjectWidget.new({viewportFraction: this.viewportFraction, delegate: this.delegate, $creationLocationd_0dea112b090073317d4: C[0] || CT.C0}), $creationLocationd_0dea112b090073317d4: C[4] || CT.C4});
    }
  };
  (sliver_fill$.SliverFillViewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 1;
    let padEnds = opts && 'padEnds' in opts ? opts.padEnds : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$] = delegate;
    this[viewportFraction$] = viewportFraction;
    this[padEnds$] = padEnds;
    if (!(viewportFraction !== null)) dart.assertFailed(null, I[0], 33, 15, "viewportFraction != null");
    if (!(viewportFraction > 0.0)) dart.assertFailed(null, I[0], 34, 15, "viewportFraction > 0.0");
    if (!(padEnds !== null)) dart.assertFailed(null, I[0], 35, 15, "padEnds != null");
    sliver_fill$.SliverFillViewport.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$.SliverFillViewport.prototype;
  dart.addTypeTests(sliver_fill$.SliverFillViewport);
  dart.addTypeCaches(sliver_fill$.SliverFillViewport);
  dart.setMethodSignature(sliver_fill$.SliverFillViewport, () => ({
    __proto__: dart.getMethods(sliver_fill$.SliverFillViewport.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$.SliverFillViewport, I[1]);
  dart.setFieldSignature(sliver_fill$.SliverFillViewport, () => ({
    __proto__: dart.getFields(sliver_fill$.SliverFillViewport.__proto__),
    viewportFraction: dart.finalFieldType(core.double),
    padEnds: dart.finalFieldType(core.bool),
    delegate: dart.finalFieldType(sliver.SliverChildDelegate)
  }));
  var viewportFraction$0 = dart.privateName(sliver_fill$, "_SliverFillViewportRenderObjectWidget.viewportFraction");
  sliver_fill$._SliverFillViewportRenderObjectWidget = class _SliverFillViewportRenderObjectWidget extends sliver.SliverMultiBoxAdaptorWidget {
    get viewportFraction() {
      return this[viewportFraction$0];
    }
    set viewportFraction(value) {
      super.viewportFraction = value;
    }
    createRenderObject(context) {
      let element = sliver.SliverMultiBoxAdaptorElement.as(context);
      return new sliver_fill.RenderSliverFillViewport.new({childManager: element, viewportFraction: this.viewportFraction});
    }
    updateRenderObject(context, renderObject) {
      sliver_fill.RenderSliverFillViewport.as(renderObject);
      renderObject.viewportFraction = this.viewportFraction;
    }
  };
  (sliver_fill$._SliverFillViewportRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 1;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[viewportFraction$0] = viewportFraction;
    if (!(viewportFraction !== null)) dart.assertFailed(null, I[0], 78, 15, "viewportFraction != null");
    if (!(viewportFraction > 0.0)) dart.assertFailed(null, I[0], 79, 14, "viewportFraction > 0.0");
    sliver_fill$._SliverFillViewportRenderObjectWidget.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFillViewportRenderObjectWidget.prototype;
  dart.addTypeTests(sliver_fill$._SliverFillViewportRenderObjectWidget);
  dart.addTypeCaches(sliver_fill$._SliverFillViewportRenderObjectWidget);
  dart.setMethodSignature(sliver_fill$._SliverFillViewportRenderObjectWidget, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFillViewportRenderObjectWidget.__proto__),
    createRenderObject: dart.fnType(sliver_fill.RenderSliverFillViewport, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFillViewportRenderObjectWidget, I[1]);
  dart.setFieldSignature(sliver_fill$._SliverFillViewportRenderObjectWidget, () => ({
    __proto__: dart.getFields(sliver_fill$._SliverFillViewportRenderObjectWidget.__proto__),
    viewportFraction: dart.finalFieldType(core.double)
  }));
  var viewportFraction$1 = dart.privateName(sliver_fill$, "_SliverFractionalPadding.viewportFraction");
  sliver_fill$._SliverFractionalPadding = class _SliverFractionalPadding extends framework.SingleChildRenderObjectWidget {
    get viewportFraction() {
      return this[viewportFraction$1];
    }
    set viewportFraction(value) {
      super.viewportFraction = value;
    }
    createRenderObject(context) {
      return new sliver_fill$._RenderSliverFractionalPadding.new({viewportFraction: this.viewportFraction});
    }
    updateRenderObject(context, renderObject) {
      sliver_fill$._RenderSliverFractionalPadding.as(renderObject);
      renderObject.viewportFraction = this.viewportFraction;
    }
  };
  (sliver_fill$._SliverFractionalPadding.new = function(opts) {
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 0;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[viewportFraction$1] = viewportFraction;
    if (!(viewportFraction !== null)) dart.assertFailed(null, I[0], 100, 15, "viewportFraction != null");
    if (!(viewportFraction >= 0)) dart.assertFailed(null, I[0], 101, 14, "viewportFraction >= 0");
    if (!(viewportFraction <= 0.5)) dart.assertFailed(null, I[0], 102, 14, "viewportFraction <= 0.5");
    sliver_fill$._SliverFractionalPadding.__proto__.new.call(this, {child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFractionalPadding.prototype;
  dart.addTypeTests(sliver_fill$._SliverFractionalPadding);
  dart.addTypeCaches(sliver_fill$._SliverFractionalPadding);
  dart.setMethodSignature(sliver_fill$._SliverFractionalPadding, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFractionalPadding.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFractionalPadding, I[1]);
  dart.setFieldSignature(sliver_fill$._SliverFractionalPadding, () => ({
    __proto__: dart.getFields(sliver_fill$._SliverFractionalPadding.__proto__),
    viewportFraction: dart.finalFieldType(core.double)
  }));
  var _lastResolvedConstraints = dart.privateName(sliver_fill$, "_lastResolvedConstraints");
  var _resolvedPadding = dart.privateName(sliver_fill$, "_resolvedPadding");
  var _viewportFraction = dart.privateName(sliver_fill$, "_viewportFraction");
  var _markNeedsResolution = dart.privateName(sliver_fill$, "_markNeedsResolution");
  var _name = dart.privateName(basic_types, "_name");
  var _resolve = dart.privateName(sliver_fill$, "_resolve");
  sliver_fill$._RenderSliverFractionalPadding = class _RenderSliverFractionalPadding extends sliver_padding.RenderSliverEdgeInsetsPadding {
    get viewportFraction() {
      return this[_viewportFraction];
    }
    set viewportFraction(newValue) {
      if (!(newValue !== null)) dart.assertFailed(null, I[0], 129, 12, "newValue != null");
      if (this[_viewportFraction] === newValue) return;
      this[_viewportFraction] = newValue;
      this[_markNeedsResolution]();
    }
    get resolvedPadding() {
      return this[_resolvedPadding];
    }
    [_markNeedsResolution]() {
      this[_resolvedPadding] = null;
      this.markNeedsLayout();
    }
    [_resolve]() {
      if (this[_resolvedPadding] != null && dart.equals(this[_lastResolvedConstraints], this.constraints)) return;
      if (!(this.constraints.axis !== null)) dart.assertFailed(null, I[0], 149, 12, "constraints.axis != null");
      let paddingValue = this.constraints.viewportMainAxisExtent * this.viewportFraction;
      this[_lastResolvedConstraints] = this.constraints;
      switch (this.constraints.axis) {
        case C[8] || CT.C8:
        {
          this[_resolvedPadding] = new edge_insets.EdgeInsets.symmetric({horizontal: paddingValue});
          break;
        }
        case C[9] || CT.C9:
        {
          this[_resolvedPadding] = new edge_insets.EdgeInsets.symmetric({vertical: paddingValue});
          break;
        }
      }
      return;
    }
    performLayout() {
      this[_resolve]();
      super.performLayout();
    }
  };
  (sliver_fill$._RenderSliverFractionalPadding.new = function(opts) {
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 0;
    this[_lastResolvedConstraints] = null;
    this[_resolvedPadding] = null;
    if (!(viewportFraction !== null)) dart.assertFailed(null, I[0], 119, 15, "viewportFraction != null");
    if (!(viewportFraction <= 0.5)) dart.assertFailed(null, I[0], 120, 14, "viewportFraction <= 0.5");
    if (!(viewportFraction >= 0)) dart.assertFailed(null, I[0], 121, 14, "viewportFraction >= 0");
    this[_viewportFraction] = viewportFraction;
    sliver_fill$._RenderSliverFractionalPadding.__proto__.new.call(this);
    ;
  }).prototype = sliver_fill$._RenderSliverFractionalPadding.prototype;
  dart.addTypeTests(sliver_fill$._RenderSliverFractionalPadding);
  dart.addTypeCaches(sliver_fill$._RenderSliverFractionalPadding);
  dart.setMethodSignature(sliver_fill$._RenderSliverFractionalPadding, () => ({
    __proto__: dart.getMethods(sliver_fill$._RenderSliverFractionalPadding.__proto__),
    [_markNeedsResolution]: dart.fnType(dart.void, []),
    [_resolve]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(sliver_fill$._RenderSliverFractionalPadding, () => ({
    __proto__: dart.getGetters(sliver_fill$._RenderSliverFractionalPadding.__proto__),
    viewportFraction: core.double,
    resolvedPadding: dart.nullable(edge_insets.EdgeInsets)
  }));
  dart.setSetterSignature(sliver_fill$._RenderSliverFractionalPadding, () => ({
    __proto__: dart.getSetters(sliver_fill$._RenderSliverFractionalPadding.__proto__),
    viewportFraction: core.double
  }));
  dart.setLibraryUri(sliver_fill$._RenderSliverFractionalPadding, I[1]);
  dart.setFieldSignature(sliver_fill$._RenderSliverFractionalPadding, () => ({
    __proto__: dart.getFields(sliver_fill$._RenderSliverFractionalPadding.__proto__),
    [_lastResolvedConstraints]: dart.fieldType(dart.nullable(sliver$.SliverConstraints)),
    [_viewportFraction]: dart.fieldType(core.double),
    [_resolvedPadding]: dart.fieldType(dart.nullable(edge_insets.EdgeInsets))
  }));
  var child$ = dart.privateName(sliver_fill$, "SliverFillRemaining.child");
  var hasScrollBody$ = dart.privateName(sliver_fill$, "SliverFillRemaining.hasScrollBody");
  var fillOverscroll$ = dart.privateName(sliver_fill$, "SliverFillRemaining.fillOverscroll");
  sliver_fill$.SliverFillRemaining = class SliverFillRemaining extends framework.StatelessWidget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get hasScrollBody() {
      return this[hasScrollBody$];
    }
    set hasScrollBody(value) {
      super.hasScrollBody = value;
    }
    get fillOverscroll() {
      return this[fillOverscroll$];
    }
    set fillOverscroll(value) {
      super.fillOverscroll = value;
    }
    build(context) {
      if (this.hasScrollBody) return new sliver_fill$._SliverFillRemainingWithScrollable.new({child: this.child, $creationLocationd_0dea112b090073317d4: C[10] || CT.C10});
      if (!this.fillOverscroll) return new sliver_fill$._SliverFillRemainingWithoutScrollable.new({child: this.child, $creationLocationd_0dea112b090073317d4: C[13] || CT.C13});
      return new sliver_fill$._SliverFillRemainingAndOverscroll.new({child: this.child, $creationLocationd_0dea112b090073317d4: C[16] || CT.C16});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T.DiagnosticsPropertyOfWidget()).new("child", this.child));
      let flags = (() => {
        let t0 = T.JSArrayOfString().of([]);
        if (this.hasScrollBody) t0[$add]("scrollable");
        if (this.fillOverscroll) t0[$add]("fillOverscroll");
        return t0;
      })();
      if (flags[$isEmpty]) flags[$add]("nonscrollable");
      properties.add(new (T.IterablePropertyOfString()).new("mode", flags));
    }
  };
  (sliver_fill$.SliverFillRemaining.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let hasScrollBody = opts && 'hasScrollBody' in opts ? opts.hasScrollBody : true;
    let fillOverscroll = opts && 'fillOverscroll' in opts ? opts.fillOverscroll : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[hasScrollBody$] = hasScrollBody;
    this[fillOverscroll$] = fillOverscroll;
    if (!(hasScrollBody !== null)) dart.assertFailed(null, I[0], 401, 15, "hasScrollBody != null");
    if (!(fillOverscroll !== null)) dart.assertFailed(null, I[0], 402, 15, "fillOverscroll != null");
    sliver_fill$.SliverFillRemaining.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$.SliverFillRemaining.prototype;
  dart.addTypeTests(sliver_fill$.SliverFillRemaining);
  dart.addTypeCaches(sliver_fill$.SliverFillRemaining);
  dart.setMethodSignature(sliver_fill$.SliverFillRemaining, () => ({
    __proto__: dart.getMethods(sliver_fill$.SliverFillRemaining.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$.SliverFillRemaining, I[1]);
  dart.setFieldSignature(sliver_fill$.SliverFillRemaining, () => ({
    __proto__: dart.getFields(sliver_fill$.SliverFillRemaining.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    hasScrollBody: dart.finalFieldType(core.bool),
    fillOverscroll: dart.finalFieldType(core.bool)
  }));
  sliver_fill$._SliverFillRemainingWithScrollable = class _SliverFillRemainingWithScrollable extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_fill.RenderSliverFillRemainingWithScrollable.new();
    }
  };
  (sliver_fill$._SliverFillRemainingWithScrollable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_fill$._SliverFillRemainingWithScrollable.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFillRemainingWithScrollable.prototype;
  dart.addTypeTests(sliver_fill$._SliverFillRemainingWithScrollable);
  dart.addTypeCaches(sliver_fill$._SliverFillRemainingWithScrollable);
  dart.setMethodSignature(sliver_fill$._SliverFillRemainingWithScrollable, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFillRemainingWithScrollable.__proto__),
    createRenderObject: dart.fnType(sliver_fill.RenderSliverFillRemainingWithScrollable, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFillRemainingWithScrollable, I[1]);
  sliver_fill$._SliverFillRemainingWithoutScrollable = class _SliverFillRemainingWithoutScrollable extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_fill.RenderSliverFillRemaining.new();
    }
  };
  (sliver_fill$._SliverFillRemainingWithoutScrollable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_fill$._SliverFillRemainingWithoutScrollable.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFillRemainingWithoutScrollable.prototype;
  dart.addTypeTests(sliver_fill$._SliverFillRemainingWithoutScrollable);
  dart.addTypeCaches(sliver_fill$._SliverFillRemainingWithoutScrollable);
  dart.setMethodSignature(sliver_fill$._SliverFillRemainingWithoutScrollable, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFillRemainingWithoutScrollable.__proto__),
    createRenderObject: dart.fnType(sliver_fill.RenderSliverFillRemaining, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFillRemainingWithoutScrollable, I[1]);
  sliver_fill$._SliverFillRemainingAndOverscroll = class _SliverFillRemainingAndOverscroll extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_fill.RenderSliverFillRemainingAndOverscroll.new();
    }
  };
  (sliver_fill$._SliverFillRemainingAndOverscroll.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_fill$._SliverFillRemainingAndOverscroll.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFillRemainingAndOverscroll.prototype;
  dart.addTypeTests(sliver_fill$._SliverFillRemainingAndOverscroll);
  dart.addTypeCaches(sliver_fill$._SliverFillRemainingAndOverscroll);
  dart.setMethodSignature(sliver_fill$._SliverFillRemainingAndOverscroll, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFillRemainingAndOverscroll.__proto__),
    createRenderObject: dart.fnType(sliver_fill.RenderSliverFillRemainingAndOverscroll, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFillRemainingAndOverscroll, I[1]);
  dart.trackLibraries("packages/flutter/src/widgets/sliver_fill.dart", {
    "package:flutter/src/widgets/sliver_fill.dart": sliver_fill$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["sliver_fill.dart"],"names":[],"mappings":"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","file":"../../../../../../../E:/packages/flutter/src/widgets/sliver_fill.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__sliver_fill: sliver_fill$
  };
}));

//# sourceMappingURL=sliver_fill.dart.lib.js.map
=======
    get C0() {
      return C[0] = dart.fn(stack_frame.StackFrame.fromStackTraceLine, T.StringToStackFrameN());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: stack_frame.StackFrame.prototype,
        [isConstructor$]: false,
        [method$]: "asynchronous suspension",
        [className$]: "",
        [column$]: -1,
        [line$]: -1,
        [packagePath$]: "",
        [$package$]: "",
        [packageScheme$]: "",
        [number$]: -1,
        [source$]: "<asynchronous suspension>"
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: stack_frame.StackFrame.prototype,
        [isConstructor$]: false,
        [method$]: "...",
        [className$]: "",
        [column$]: -1,
        [line$]: -1,
        [packagePath$]: "",
        [$package$]: "",
        [packageScheme$]: "",
        [number$]: -1,
        [source$]: "..."
      });
    }
  }, false);
  var C = Array(3).fill(void 0);
  var I = [
    "file:///C:/flutter/packages/flutter/lib/src/foundation/stack_frame.dart",
    "package:flutter/src/foundation/stack_frame.dart"
  ];
  var source$ = dart.privateName(stack_frame, "StackFrame.source");
  var number$ = dart.privateName(stack_frame, "StackFrame.number");
  var packageScheme$ = dart.privateName(stack_frame, "StackFrame.packageScheme");
  var $package$ = dart.privateName(stack_frame, "StackFrame.package");
  var packagePath$ = dart.privateName(stack_frame, "StackFrame.packagePath");
  var line$ = dart.privateName(stack_frame, "StackFrame.line");
  var column$ = dart.privateName(stack_frame, "StackFrame.column");
  var className$ = dart.privateName(stack_frame, "StackFrame.className");
  var method$ = dart.privateName(stack_frame, "StackFrame.method");
  var isConstructor$ = dart.privateName(stack_frame, "StackFrame.isConstructor");
  stack_frame.StackFrame = class StackFrame extends core.Object {
    get source() {
      return this[source$];
    }
    set source(value) {
      super.source = value;
    }
    get number() {
      return this[number$];
    }
    set number(value) {
      super.number = value;
    }
    get packageScheme() {
      return this[packageScheme$];
    }
    set packageScheme(value) {
      super.packageScheme = value;
    }
    get package() {
      return this[$package$];
    }
    set package(value) {
      super.package = value;
    }
    get packagePath() {
      return this[packagePath$];
    }
    set packagePath(value) {
      super.packagePath = value;
    }
    get line() {
      return this[line$];
    }
    set line(value) {
      super.line = value;
    }
    get column() {
      return this[column$];
    }
    set column(value) {
      super.column = value;
    }
    get className() {
      return this[className$];
    }
    set className(value) {
      super.className = value;
    }
    get method() {
      return this[method$];
    }
    set method(value) {
      super.method = value;
    }
    get isConstructor() {
      return this[isConstructor$];
    }
    set isConstructor(value) {
      super.isConstructor = value;
    }
    static fromStackTrace(stack) {
      if (!(stack !== null)) dart.assertFailed(null, I[0], 79, 12, "stack != null");
      return stack_frame.StackFrame.fromStackString(stack.toString());
    }
    static fromStackString(stack) {
      if (!(stack !== null)) dart.assertFailed(null, I[0], 85, 12, "stack != null");
      return stack[$trim]()[$split]("\n")[$where](dart.fn(line => line[$isNotEmpty], T.StringTobool()))[$map](T.StackFrameN(), C[0] || CT.C0)[$whereType](stack_frame.StackFrame)[$toList]();
    }
    static _parseWebFrame(line) {
      if (true) {
        return stack_frame.StackFrame._parseWebDebugFrame(line);
      } else {
        return stack_frame.StackFrame._parseWebNonDebugFrame(line);
      }
    }
    static _parseWebDebugFrame(line) {
      let hasPackage = line[$startsWith]("package");
      let parser = hasPackage ? core.RegExp.new("^(package.+) (\\d+):(\\d+)\\s+(.+)$") : core.RegExp.new("^(.+) (\\d+):(\\d+)\\s+(.+)$");
      let match = parser.firstMatch(line);
      if (!(match != null)) dart.assertFailed("Expected " + line + " to match " + dart.str(parser) + ".", I[0], 114, 12, "match != null");
      match = dart.nullCheck(match);
      let $package = "<unknown>";
      let packageScheme = "<unknown>";
      let packagePath = "<unknown>";
      if (hasPackage) {
        packageScheme = "package";
        let packageUri = core.Uri.parse(dart.nullCheck(match.group(1)));
        $package = packageUri.pathSegments[$_get](0);
        packagePath = packageUri.path[$replaceFirst](packageUri.pathSegments[$_get](0) + "/", "");
      }
      return new stack_frame.StackFrame.new({number: -1, packageScheme: packageScheme, package: $package, packagePath: packagePath, line: core.int.parse(dart.nullCheck(match.group(2))), column: core.int.parse(dart.nullCheck(match.group(3))), className: "<unknown>", method: dart.nullCheck(match.group(4)), source: line});
    }
    static _parseWebNonDebugFrame(line) {
      let match = stack_frame.StackFrame._webNonDebugFramePattern.firstMatch(line);
      if (match == null) {
        return null;
      }
      let classAndMethod = dart.nullCheck(match.group(1))[$split](".");
      let className = classAndMethod[$length] > 1 ? classAndMethod[$first] : "<unknown>";
      let method = classAndMethod[$length] > 1 ? classAndMethod[$skip](1)[$join](".") : classAndMethod[$single];
      return new stack_frame.StackFrame.new({number: -1, packageScheme: "<unknown>", package: "<unknown>", packagePath: "<unknown>", line: -1, column: -1, className: className, method: method, source: line});
    }
    static fromStackTraceLine(line) {
      if (!(line !== null)) dart.assertFailed(null, I[0], 186, 12, "line != null");
      if (line === "<asynchronous suspension>") {
        return stack_frame.StackFrame.asynchronousSuspension;
      } else if (line === "...") {
        return stack_frame.StackFrame.stackOverFlowElision;
      }
      if (!(line !== "===== asynchronous gap ===========================")) dart.assertFailed("Got a stack frame from package:stack_trace, where a vm or web frame was expected. " + "This can happen if FlutterError.demangleStackTrace was not set in an environment " + "that propagates non-standard stack traces to the framework, such as during tests.", I[0], 194, 7, "line != '===== asynchronous gap ==========================='");
      if (!line[$startsWith]("#")) {
        return stack_frame.StackFrame._parseWebFrame(line);
      }
      let parser = core.RegExp.new("^#(\\d+) +(.+) \\((.+?):?(\\d+){0,1}:?(\\d+){0,1}\\)$");
      let match = parser.firstMatch(line);
      if (!(match != null)) dart.assertFailed("Expected " + line + " to match " + dart.str(parser) + ".", I[0], 207, 12, "match != null");
      match = dart.nullCheck(match);
      let isConstructor = false;
      let className = "";
      let method = dart.nullCheck(match.group(2))[$replaceAll](".<anonymous closure>", "");
      if (method[$startsWith]("new")) {
        let methodParts = method[$split](" ");
        className = methodParts[$length] > 1 ? method[$split](" ")[$_get](1) : "<unknown>";
        method = "";
        if (className[$contains](".")) {
          let parts = className[$split](".");
          className = parts[$_get](0);
          method = parts[$_get](1);
        }
        isConstructor = true;
      } else if (method[$contains](".")) {
        let parts = method[$split](".");
        className = parts[$_get](0);
        method = parts[$_get](1);
      }
      let packageUri = core.Uri.parse(dart.nullCheck(match.group(3)));
      let $package = "<unknown>";
      let packagePath = packageUri.path;
      if (packageUri.scheme === "dart" || packageUri.scheme === "package") {
        $package = packageUri.pathSegments[$_get](0);
        packagePath = packageUri.path[$replaceFirst](packageUri.pathSegments[$_get](0) + "/", "");
      }
      return new stack_frame.StackFrame.new({number: core.int.parse(dart.nullCheck(match.group(1))), className: className, method: method, packageScheme: packageUri.scheme, package: $package, packagePath: packagePath, line: match.group(4) == null ? -1 : core.int.parse(dart.nullCheck(match.group(4))), column: match.group(5) == null ? -1 : core.int.parse(dart.nullCheck(match.group(5))), isConstructor: isConstructor, source: line});
    }
    get hashCode() {
      return ui.hashValues(this.number, this.package, this.line, this.column, this.className, this.method, this.source);
    }
    _equals(other) {
      if (other == null) return false;
      if (!other[$runtimeType]._equals(this[$runtimeType])) return false;
      return stack_frame.StackFrame.is(other) && other.number === this.number && other.package === this.package && other.line === this.line && other.column === this.column && other.className === this.className && other.method === this.method && other.source === this.source;
    }
    toString() {
      return object.objectRuntimeType(this, "StackFrame") + "(#" + dart.str(this.number) + ", " + this.packageScheme + ":" + this.package + "/" + this.packagePath + ":" + dart.str(this.line) + ":" + dart.str(this.column) + ", className: " + this.className + ", method: " + this.method + ")";
    }
  };
  (stack_frame.StackFrame.new = function(opts) {
    let number = opts && 'number' in opts ? opts.number : null;
    let column = opts && 'column' in opts ? opts.column : null;
    let line = opts && 'line' in opts ? opts.line : null;
    let packageScheme = opts && 'packageScheme' in opts ? opts.packageScheme : null;
    let $package = opts && 'package' in opts ? opts.package : null;
    let packagePath = opts && 'packagePath' in opts ? opts.packagePath : null;
    let className = opts && 'className' in opts ? opts.className : "";
    let method = opts && 'method' in opts ? opts.method : null;
    let isConstructor = opts && 'isConstructor' in opts ? opts.isConstructor : false;
    let source = opts && 'source' in opts ? opts.source : null;
    this[number$] = number;
    this[column$] = column;
    this[line$] = line;
    this[packageScheme$] = packageScheme;
    this[$package$] = $package;
    this[packagePath$] = packagePath;
    this[className$] = className;
    this[method$] = method;
    this[isConstructor$] = isConstructor;
    this[source$] = source;
    if (!(number !== null)) dart.assertFailed(null, I[0], 40, 16, "number != null");
    if (!(column !== null)) dart.assertFailed(null, I[0], 41, 16, "column != null");
    if (!(line !== null)) dart.assertFailed(null, I[0], 42, 16, "line != null");
    if (!(method !== null)) dart.assertFailed(null, I[0], 43, 16, "method != null");
    if (!(packageScheme !== null)) dart.assertFailed(null, I[0], 44, 16, "packageScheme != null");
    if (!($package !== null)) dart.assertFailed(null, I[0], 45, 16, "package != null");
    if (!(packagePath !== null)) dart.assertFailed(null, I[0], 46, 16, "packagePath != null");
    if (!(className !== null)) dart.assertFailed(null, I[0], 47, 16, "className != null");
    if (!(isConstructor !== null)) dart.assertFailed(null, I[0], 48, 16, "isConstructor != null");
    if (!(source !== null)) dart.assertFailed(null, I[0], 49, 16, "source != null");
    ;
  }).prototype = stack_frame.StackFrame.prototype;
  dart.addTypeTests(stack_frame.StackFrame);
  dart.addTypeCaches(stack_frame.StackFrame);
  dart.setLibraryUri(stack_frame.StackFrame, I[1]);
  dart.setFieldSignature(stack_frame.StackFrame, () => ({
    __proto__: dart.getFields(stack_frame.StackFrame.__proto__),
    source: dart.finalFieldType(core.String),
    number: dart.finalFieldType(core.int),
    packageScheme: dart.finalFieldType(core.String),
    package: dart.finalFieldType(core.String),
    packagePath: dart.finalFieldType(core.String),
    line: dart.finalFieldType(core.int),
    column: dart.finalFieldType(core.int),
    className: dart.finalFieldType(core.String),
    method: dart.finalFieldType(core.String),
    isConstructor: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(stack_frame.StackFrame, ['_equals', 'toString']);
  dart.defineExtensionAccessors(stack_frame.StackFrame, ['hashCode']);
  dart.defineLazy(stack_frame.StackFrame, {
    /*stack_frame.StackFrame.asynchronousSuspension*/get asynchronousSuspension() {
      return C[1] || CT.C1;
    },
    /*stack_frame.StackFrame.stackOverFlowElision*/get stackOverFlowElision() {
      return C[2] || CT.C2;
    },
    /*stack_frame.StackFrame._webNonDebugFramePattern*/get _webNonDebugFramePattern() {
      return core.RegExp.new("^\\s*at ([^\\s]+).*$");
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/foundation/stack_frame.dart", {
    "package:flutter/src/foundation/stack_frame.dart": stack_frame
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["stack_frame.dart"],"names":[],"mappings":"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","file":"../../../../../../packages/flutter/src/foundation/stack_frame.dart.lib.js"}');
  // Exports:
  return {
    src__foundation__stack_frame: stack_frame
  };
}));

//# sourceMappingURL=stack_frame.dart.lib.js.map
>>>>>>> feature-b
